// Generated by gencpp from file assignment_3/Sensor.msg
// DO NOT EDIT!


#ifndef ASSIGNMENT_3_MESSAGE_SENSOR_H
#define ASSIGNMENT_3_MESSAGE_SENSOR_H

#include <ros/service_traits.h>


#include <assignment_3/SensorRequest.h>
#include <assignment_3/SensorResponse.h>


namespace assignment_3
{

struct Sensor
{

typedef SensorRequest Request;
typedef SensorResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Sensor
} // namespace assignment_3


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::assignment_3::Sensor > {
  static const char* value()
  {
    return "546dae9226dd84d9996bfa16115be7c7";
  }

  static const char* value(const ::assignment_3::Sensor&) { return value(); }
};

template<>
struct DataType< ::assignment_3::Sensor > {
  static const char* value()
  {
    return "assignment_3/Sensor";
  }

  static const char* value(const ::assignment_3::Sensor&) { return value(); }
};


// service_traits::MD5Sum< ::assignment_3::SensorRequest> should match
// service_traits::MD5Sum< ::assignment_3::Sensor >
template<>
struct MD5Sum< ::assignment_3::SensorRequest>
{
  static const char* value()
  {
    return MD5Sum< ::assignment_3::Sensor >::value();
  }
  static const char* value(const ::assignment_3::SensorRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::assignment_3::SensorRequest> should match
// service_traits::DataType< ::assignment_3::Sensor >
template<>
struct DataType< ::assignment_3::SensorRequest>
{
  static const char* value()
  {
    return DataType< ::assignment_3::Sensor >::value();
  }
  static const char* value(const ::assignment_3::SensorRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::assignment_3::SensorResponse> should match
// service_traits::MD5Sum< ::assignment_3::Sensor >
template<>
struct MD5Sum< ::assignment_3::SensorResponse>
{
  static const char* value()
  {
    return MD5Sum< ::assignment_3::Sensor >::value();
  }
  static const char* value(const ::assignment_3::SensorResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::assignment_3::SensorResponse> should match
// service_traits::DataType< ::assignment_3::Sensor >
template<>
struct DataType< ::assignment_3::SensorResponse>
{
  static const char* value()
  {
    return DataType< ::assignment_3::Sensor >::value();
  }
  static const char* value(const ::assignment_3::SensorResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ASSIGNMENT_3_MESSAGE_SENSOR_H
